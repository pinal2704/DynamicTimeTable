// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DynamicTimeTable.Migrations
{
    [DbContext(typeof(TimeTableContext))]
    [Migration("20250227112102_Dbtable")]
    partial class Dbtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DynamicTimeTable.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimetableConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimetableConfigurationId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DynamicTimeTable.Models.TimetableConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectsPerDay")
                        .HasColumnType("int");

                    b.Property<int>("TotalSubjects")
                        .HasColumnType("int");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimetableConfigurations");
                });

            modelBuilder.Entity("DynamicTimeTable.Models.TimetableData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TimetableConfigurationId")
                        .HasColumnType("int");

                    b.Property<string>("TimetableJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TimetableConfigurationId")
                        .IsUnique();

                    b.ToTable("TimetableDatas");
                });

            modelBuilder.Entity("DynamicTimeTable.Models.Subject", b =>
                {
                    b.HasOne("DynamicTimeTable.Models.TimetableConfiguration", "TimetableConfiguration")
                        .WithMany("Subjects")
                        .HasForeignKey("TimetableConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimetableConfiguration");
                });

            modelBuilder.Entity("DynamicTimeTable.Models.TimetableData", b =>
                {
                    b.HasOne("DynamicTimeTable.Models.TimetableConfiguration", "TimetableConfiguration")
                        .WithOne("TimetableData")
                        .HasForeignKey("DynamicTimeTable.Models.TimetableData", "TimetableConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimetableConfiguration");
                });

            modelBuilder.Entity("DynamicTimeTable.Models.TimetableConfiguration", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("TimetableData")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
